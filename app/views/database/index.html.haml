/ Content Header (Page header)
%section.content-header
  %h1
    Database
  %ol.breadcrumb.breadcrumb-as-navigation
    %li.active View Past:
    - Reporter::PAST_OPTIONS.each do |option|
      %li= link_to option[:label], dynamic_report_url(:past => option[:past])
- if selected_filters.present?
  %section.content-header
    - selected_filters.each_pair do |key, value|
      = link_to dynamic_report_url(:without => key), :class => "btn btn-info btn-sm", :title => value do
        = key
        \: #{truncate(value, :length => 40)}
        %i.fa.fa-remove
%section.content
  .row
    .col-lg-12
      = paginate @database_calls
    .col-lg-12.connectedSortable
      .box
        .box-header
          %i.fa.fa-clock
          %h3.box-title Database Query Time
        .box-body
          = react_component("AreaChart", { :refresh => 60,
                                           :legend => "bottom",
                                           :points => false,
                                           :curve => true,
                                           :library => { :chart => { :zoomType => "x" },
                                                         xAxis: { type: 'datetime', labels: { format: '{value:%I:%M %p}' } },
                                                         yAxis: { labels: { format: '{value}ms' }} },
                                           :data => dynamic_report_url({}, { :url => "/api/v1/stats/database", :application_id => @current_application.id }) })
    .col-lg-12.connectedSortable
      .box
        .box-header
          %h3.box-title Name
        .box-body
          %table.table.table-condensed
            %tr
              %th{:width => "150"} Layer
              %th Statement
              %th.text-center{:width => "200"} Duration (ms)
              %th{:width => "200"}
            - @database_calls.each do |database_call|
              %tr
                %td.ellipsis= link_to database_call.span.layer.name, dynamic_url(database_call.application, :database_index, :_layer => database_call.span.layer_id)
                %td.ellipsis= link_to database_call.statement, dynamic_url(database_call.application, :trace, id: database_call.span.trace_id, :span_id => database_call.span.id)
                %td.text-center
                  = number_with_precision(database_call.duration, :precision => 2)
                %td.text-center
                  = time_ago_in_words(database_call.timestamp)
                  ago
    .col-lg-12
      = paginate @database_calls
