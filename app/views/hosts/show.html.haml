/ Content Header (Page header)
%section.content-header
  %h1
    = link_to "Hosts", dynamic_url(:hosts)
    >
    = @host.name

  %ol.breadcrumb.breadcrumb-as-navigation
    %li.active View Past:
    - Reporter::PAST_OPTIONS.each do |option|
      %li= link_to option[:label], dynamic_url(@host, _past: option[:past])
  - if selected_filters.present?
    %section.content-header
      - selected_filters.each_pair do |key, value|
        = link_to dynamic_url(@host, :without => key), :class => "btn btn-info btn-sm", :title => value do
          = key
          \: #{truncate(value, :length => 40)}
          %i.fa.fa-remove
/ Main content
%section.content
  .row
    .col-lg-12
      .row
        .col-lg-4
          .box
            .box-header System Memory
            .box-body
              = react_component("AreaChart", { :refresh => 60,
                                               :legend => "bottom",
                                               :curve => true,
                                               :stacked => true,
                                               :points => false,
                                               :library => { :chart => { :zoomType => "x" },
                                                             :xAxis => { :type => 'datetime',
                                                                         :labels => { :format => '{value:%I:%M %p}' } },
                                                             :tooltip => { :pointFormat => '<span style="color:{series.color}">{series.name}</span>: {point.y:.0f}b ({point.percentage:.0f}%)<br/>',
                                                                           :shared => true } },
                                               :data => url_for(dynamic_url(:metric, metric_params({}, { :id => "system.memory.inactive_bytes,system.memory.active_bytes,system.memory.free_bytes,system.memory.wired_bytes", :host_id => @host, :v => "1", :group => "name" }))) })

        .col-lg-4
          .box
            .box-header System Network
            .box-body
              = react_component("AreaChart", { :refresh => 60,
                                               :legend => "bottom",
                                               :curve => true,
                                               :stacked => true,
                                               :points => false,
                                               :library => { :chart => { :zoomType => "x" },
                                                             :xAxis => { :type => 'datetime',
                                                                         :labels => { :format => '{value:%I:%M %p}' } },
                                                             :tooltip => { :pointFormat => '<span style="color:{series.color}">{series.name}</span>: {point.y:.0f}b ({point.percentage:.0f}%)<br/>',
                                                                           :shared => true } },
                                               :data => url_for(dynamic_url(:metric, metric_params({}, { :id => "system.network.in_bytes,system.network.out_bytes", :host_id => @host, :v => "1", :group => "name" }))) })

        .col-lg-4
          .box
            .box-header System Disk
            .box-body
              = react_component("AreaChart", { :refresh => 60,
                                               :legend => "bottom",
                                               :curve => true,
                                               :stacked => true,
                                               :points => false,
                                               :library => { :chart => { :zoomType => "x" },
                                                             :xAxis => { :type => 'datetime',
                                                                         :labels => { :format => '{value:%I:%M %p}' } },
                                                             :tooltip => { :pointFormat => '<span style="color:{series.color}">{series.name}</span>: {point.y:.0f}b ({point.percentage:.0f}%)<br/>',
                                                                           :shared => true } },
                                               :data => url_for(dynamic_url(:metric, metric_params({}, { :id => "system.disk.free_bytes,system.disk.used_bytes", :host_id => @host, :v => "1", :group => "name" }))) })

      .row
        .col-lg-6
          .box
            .box-header CPU Usage (%)
            .box-body
              = react_component("AreaChart", { :refresh => 60,
                                               :legend => "bottom",
                                               :curve => true,
                                               :points => false,
                                               :library => { :chart => { :zoomType => "x" },
                                                             :plotOptions => { :areaspline => { :stacking => 'percent' } },
                                                             :tooltip => { :pointFormat => '<span style="color:{series.color}">{series.name}</span> {point.percentage:.0f}%<br/>',
                                                                           :shared => true },
                                                             :xAxis => { :type => 'datetime',
                                                                         :labels => { :format => '{value:%I:%M %p}' } } },
                                               :data => url_for(dynamic_url(:metric, metric_params({}, { :id => "system.cpu.nice,system.cpu.idle,system.cpu.user,system.cpu.system", :host_id => @host, :v => "1", :group => "name" }))) })
        .col-lg-6
          .box
            .box-header System Load (1, 5, 15 minute)
            .box-body
              = react_component("LineChart", { :refresh => 60,
                                               :legend => "bottom",
                                               :points => false,
                                               :curve => true,
                                               :library => { :chart => { :zoomType => "x" },
                                                             :xAxis => { :type => 'datetime',
                                                                         :labels => { :format => '{value:%I:%M %p}' } },
                                                             :tooltip => { :pointFormat => '<span style="color:{series.color}">{series.name}</span>: {point.y:.2f}<br/>',
                                                                           :shared => true } },
                                               :data => url_for(dynamic_url(:metric, metric_params({}, { :id => "system.load.one_minute,system.load.five_minute,system.load.fifteen_minute", :host_id => @host, :v => "1", :group => "name" }))) })
